name: Go

on:
  pull_request:
  push:
    branches: ["master"]

jobs:
  quicktests:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: set up go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version-file: "go.mod"
      - name: fmt, tidy
        run: |
          make install
          make test-fmt
          make test-tidy
      - name: staticcheck
        run: make staticcheck

  lint:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: set up go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version-file: "go.mod"
      - name: setup env
        run: make install
      - name: lint
        run: make lint-github-action

  unittests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    needs:
      - quicktests
      - lint
    strategy:
      fail-fast: false
      matrix:
        os: 
          - ubuntu-22.04
          - ubuntu-latest-arm-8-cores
          - macos-13
          - [self-hosted, macos, arm64]
          - windows-2022
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: set up go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version-file: "go.mod"
      - name: setup env
        run: make install
      - name: Clear test cache
        run: make clear-test-cache
      - name: unit tests
        env:
          GOTESTSUM_FORMAT: standard-quiet
          GOTESTSUM_JUNITFILE: unit-tests.xml
        run: make test
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        # always run even if the previous step fails
        if: always()
        with:
          report_paths: "**/unit-tests.xml"
          annotate_only: true

  coverage:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: set up go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version-file: "go.mod"
      - name: setup env
        run: make install
      - name: test coverage
        run: make cover
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
